<?php

namespace App\Controllers;

use App\Core\AControllerBase;
use App\Core\Responses\Response;
use App\Models\Food;
use App\Models\Days;
use App\Models\Time_interval;
use App\Core\IAuthenticator;


class FoodController extends AControllerBase
{

    public function authorize(string $action)
    {
        return true;
        //return parent::authorize($action); // TODO: Change the autogenerated stub
    }

    public function index(): Response
    {
        $food_type_id = $this->request()->getValue("id");
        $data = Food::getAll();
        $n_data = ['message' => "", 'food_type_id' => $food_type_id];
        $cislo = 0;
        foreach ($data as $column) {
            if ($food_type_id == $column->getType()) {
                array_push($n_data, $column);
                $cislo = $cislo + 1;
            }
        }
        if ($cislo == 0 ){
            $n_data['message'] = "Bohužiaľ nie je dostupné žiadne jedlo";
        }
        return $this->html($n_data);
    }

    public function add(): Response
    {
        $food_type_id = $this->request()->getValue("id");
        $message = "";
        $data = $this->request()->getPost();
        if ($this->app->getAuth()->isLogged() && $this->app->getAuth()->getLoggedUserName() == "Admin") {
            if (isset($data["name"]) && isset($data["ingredients"]) && isset($data["price"])) {
                if (filter_var($data["price"], FILTER_VALIDATE_FLOAT) === false || $data["price"] <= 0) {
                    $message = "Zle zadaná suma";
                } else {
                    $food = new Food();
                    $food->setName($data["name"]);
                    $food->setType($food_type_id);
                    $food->setIngredients($data["ingredients"]);
                    $food->setPrice($data["price"]);
                    $food->save();
                    $url = "?c=food&a=index&id=" . $food_type_id;
                    return $this->redirect($url);
                }
            }
        } else {
            $message = "Nie ste autorizovaný pridávať veci";
        }
        $menu = new Food();
        $data = ['nadpis' => "Pridanie", 'message' => $message, 'name' => $menu->getName(), 'ingredients' => $menu->getIngredients(), 'price' => $menu->getPrice()];
        return $this->html($data);
    }

    public function edit(): Response
    {
        $id = explode("-", $this->request()->getValue("id"));
        $food_type_id = $id[0];
        $food_id = $id[1];
        $message = "";
        $food = Food::getOne($food_id);
        $data = $this->request()->getPost();
        if ($food == null) {
            $url = "?c=food&a=index&id=" . $food_type_id;
            return $this->redirect($url);
        }

        if ($this->app->getAuth()->isLogged() && $this->app->getAuth()->getLoggedUserName() == "Admin") {
            if (isset($data["name"]) && isset($data["ingredients"]) && isset($data["price"])) {
                if (filter_var($data["price"], FILTER_VALIDATE_FLOAT) === false || $data["price"] <= 0) {
                    $message = "Zle zadaná suma";
                } else {
                    $food->setName($data["name"]);
                    $food->setIngredients($data["ingredients"]);
                    $food->setPrice($data["price"]);
                    $food->save();
                    $url = "?c=food&a=index&id=" . $food_type_id;
                    return $this->redirect($url);
                }
            }
        } else {
            $message = "Nie ste autorizovaný meniť veci";
        }

        $data = ['nadpis' => "Edit", 'message' => $message, 'name' => $food->getName(), 'ingredients' => $food->getIngredients(), 'price' => $food->getPrice()];
        return $this->html($data, "add");
    }

    public function delete(): Response
    {
        if ($this->app->getAuth()->isLogged() && $this->app->getAuth()->getLoggedUserName() == "Admin") {
            $id = explode("-", $this->request()->getValue("id"));
            $food_type_id = $id[0];
            $food_id = $id[1];
            $food = Food::getOne($food_id);
            if ($food != null) {
                $food?->delete();
            }
        }
        $url = "?c=food&a=index&id=" . $food_type_id;
        return $this->redirect($url);
    }
}