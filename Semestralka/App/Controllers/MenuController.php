<?php

namespace App\Controllers;

use App\Core\AControllerBase;
use App\Core\Responses\Response;
use App\Models\Food_type;

class MenuController extends AControllerBase
{
    public function authorize(string $action)
    {
        return true;
        //return parent::authorize($action); // TODO: Change the autogenerated stub
    }

    public function index(): Response
    {
        //$data = Food::getAll();
        $data = Food_type::getAll();

        return $this->html($data);
    }

    public function add(): Response
    {
        $data = $this->request()->getPost();
        if (isset($data["type"])) {
            $food = new Food_type();
            $food->setType($data["type"]);
            $food->save();
            return $this->redirect("?c=menu");
        }

        return $this->html(new Food_type());
    }

    public function edit(): Response
    {
        $food_type_id = $this->request()->getValue("id");
        $food_type = Food_type::getOne($food_type_id);
        $data = $this->request()->getPost();
        if ($food_type == null) {
            return $this->redirect("?c=menu");
        }

        if ($this->app->getAuth()->isLogged() && $this->app->getAuth()->getLoggedUserName() == "Admin") {
            if (isset($data["type"])) {
                $food_type->setType($data["type"]);
                $food_type->save();
                return $this->redirect("?c=menu");
            }
        }

        return $this->html($food_type, "add");
    }

    public function delete(): Response
    {
        if ($this->app->getAuth()->isLogged() && $this->app->getAuth()->getLoggedUserName() == "Admin") {
            $food_type_id = $this->request()->getValue("id");
            $food_type = Food_type::getOne($food_type_id);
            if ($food_type != null) {
                $food_type->delete();
            }
        }
        return  $this->redirect("?c=menu");
    }

}